@model IEnumerable<WebappTasking.Models.TaskModel>


<div class="create--button--holder">
    <a class="create--button" asp-action="Upsert" asp-controller="Task">Create</a>
</div>

@foreach (var task in Model)
{
    <div class="task-card">
        <div class="task-card--header">
            <h3 class="task-card--name">@Html.DisplayFor(taskItem => task.Name)</h3>
            <h3 class="task-card--state">@Html.DisplayFor(taskItem => task.State)</h3>
            <form asp-action="Delete" asp-route-id="@task.Id" method="post">
                <button class="delete--button" type="submit" onclick="return confirm('Are you sure you want to permanently delete this task')">Delete</button>
            </form>
            <a class="edit--button" asp-action="Upsert" asp-controller="Task" asp-route-id="@task.Id">Edit</a>
            @if (task.State != "Done")
            {
                <form class="task-card--start-finish" asp-action="ChangeState" asp-route-id="@task.Id" method="post">
                    <button class="start-finish--button" type="submit">@(task.State != "To Do" ? "Finish" : "Start")</button>
                    @if (task.State == "Doing")
                    {
                        <div class="task-card--total-hours">
                            <label>Total Hours of Work:</label>
                            <input class="form-control" type="text" value="0" name="totalHours" />
                        </div>

                    }
                </form>
            }
            <button class="details--button" onclick="toggleHide(this.id)" id="details--@task.Id">...</button>
        </div>
        <div class="task-card--details hidden" id="dropdown--details--@task.Id">
            <span>Date Created: @Html.DisplayFor(taskItem => task.DateCreated)</span>
            @if (task.State != "To Do")
            {
                <span>Date Started: @Html.DisplayFor(taskItem => task.DateStarted)</span>
            }
            @if (task.State == "Done")
            {
                <span>Date Finished: @Html.DisplayFor(taskItem => task.DateFinished)</span>
                <span>Total Hours: @Html.DisplayFor(taskItem => task.TotalHours)</span>
            }
            <p>@Html.DisplayFor(taskItem => task.TaskDescription)</p>
        </div>
    </div>
}

<script src="~/js/task.js"></script>

